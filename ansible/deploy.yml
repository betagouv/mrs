---
- hosts: '*'
  tasks:
  - name: Installation idempotente du load balancer si necessaire
    include_role: name=yourlabs.traefik
    when: ansible_facts['ansible_local']['yourlabs_traefik']['state']|default('') != 'success'

  - name: Notification de pré-déploiement sur slack
    when: lookup("env", "SLACK_TOKEN")
    tags: update
    slack:
      token: '{{ lookup("env", "SLACK_TOKEN") }}'
      username: Django
      color: warning
      channel: tech
      parse: full
      msg: |
        DEBUT du Deploiement de {{ lookup("env", "DRONE_COMMIT_MESSAGE") }}
        par {{ lookup("env", "DRONE_COMMIT_AUTHOR_NAME") }}
        sur {{ lookup("env", "HOST") }}

  - name: Creer le dossier du deploiement
    file:
      path: '{{ home }}'
      state: directory
    when: home is defined

  - name: Executer la backup de la setup actuelle
    include_tasks: backup_execute.yml
    when: home is defined

  - name: Déploiement du pod docker-compose
    include_role: name=yourlabs.compose
    #
    #  - name: Installation d'un superuser
    #    shell: docker-compose exec django bash -euxc "djcli save settings.AUTH_USER_MODEL +username=jpic is_superuser=True && djcli chpasswd username=jpic password=changeme"
    #    when: home is defined
    #    args:
    #      chdir: '{{ home }}'
    #
  - name: Preparer la prochaine backup
    include_tasks: backup_prepare.yml
    when: home is defined

  - name: Notification de post-déploiement sur slack
    when: lookup("env", "SLACK_TOKEN")
    tags: update
    slack:
      token: '{{ lookup("env", "SLACK_TOKEN") }}'
      username: Django
      color: warning
      channel: tech-discussion
      parse: full
      msg: |
        Succès du déploiement sur {{ lookup("env", "HOST") }}
        dernier commit par {{ lookup("env", "DRONE_COMMIT_AUTHOR_NAME") }} {{ ': ' + lookup("env", "DRONE_COMMIT_MESSAGE") }}
