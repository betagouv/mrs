# Check https://circleci.com/docs/2.0/language-python/ for more details
version: 2

# Let's use YAML Anchors as demonstrated in
# https://docs.gitlab.com/ee/ci/yaml/#anchors
.deploy_template: &deploy_definition
  docker:
  - image: circleci/python:3.6.1
  steps:
  - restore_cache:
      keys: [ansible]
  - deploy:
      name: deploy
      command: ./.circleci/deploy.sh
  - save_cache:
      key: ansible
      paths: [~/.local, ~/.cache/pip]

workflows:
  version: 2

  jpic:
    jobs:
      - qa
      - test
      - build
      - jpic:
          filters:
            branches:
              only: [jpic]

  tbinetruy:
    jobs:
      - qa
      - test
      - build
      - tbinetruy:
          filters:
            branches:
              only: [tbinetruy]

  master:
    jobs:
      - qa
      - test
      - build:
          requires: [qa, test]
      - branch-tag:
          requires: [build]
      - staging:
          filters:
            branches:
              only: [cd]
          requires: [build]
      - validate-staging:
          filters:
            branches:
              only: [cd]
          type: approval
          requires: [staging]
      - production:
          filters:
            branches:
              only: [cd]
          requires: [validate-staging]

jobs:
  qa:
    docker:
    - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys:
        - qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -e qa --notest
    - save_cache:
        paths:
        - /home/circleci/repo/.tox/qa
        - /home/circleci/.local
        - /home/circleci/.cache/pip
        key: qa-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: run qa checks
        command: ~/.local/bin/tox -e qa
  test:
    docker:
    - image: circleci/python:3.6.1
    working_directory: ~/repo
    steps:
    - checkout
    - restore_cache:
        keys: [test-dependencies-{{ checksum "tox.ini" }}]
    - run:
        name: tox environment setup
        command: pip install --user tox && ~/.local/bin/tox -e py36-dj20 --notest
    - save_cache:
        paths:
        - /home/circleci/repo/.tox/py36-dj20
        - /home/circleci/.local
        - /home/circleci/.cache/pip
        key: test-dependencies-{{ checksum "tox.ini" }}
    - run:
        name: run qa checks
        command: ~/.local/bin/tox -e py36-dj20

  build:
    docker:
    - image: docker:17.05.0-ce-git
    steps:
    - checkout
    - setup_remote_docker:
        docker_layer_caching: true
    - run:
        name: Build application Docker image
        command: docker build -t betagouv/mrs:$CIRCLE_SHA1 .
    - deploy:
        name: Push application Docker image
        command: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push betagouv/mrs:$CIRCLE_SHA1
          docker tag betagouv/mrs:$CIRCLE_SHA1 betagouv/mrs:$CIRCLE_BRANCH
          docker push betagouv/mrs:$CIRCLE_BRANCH

  branch-tag:
    docker:
    - image: docker:17.05.0-ce-git
    steps:
    - setup_remote_docker:
        docker_layer_caching: true
    - deploy:
        name: Publish betagouv/mrs:{{ .Branch }}
        command: |
          docker pull betagouv/mrs:$CIRCLE_SHA1
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker tag betagouv/mrs:$CIRCLE_SHA1 betagouv/mrs:latest
          docker push betagouv/mrs:latest

  staging:
    <<: *deploy_template

  production:
    <<: *deploy_template

  jpic:
    <<: *deploy_template

  tbinetruy:
    <<: *deploy_template
