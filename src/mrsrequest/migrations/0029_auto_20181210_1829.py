# Generated by Django 2.1.3 on 2018-12-10 17:29

from datetime import datetime

from django.db import migrations
from django.db import transaction

from mrsrequest.models import MRSRequest, MRSRequestLogEntry


def change_birth_date_format(apps, schema_editor):
    """
    From birth_date yyy-mm-dd to dd/mm/yyyy.
    """
    FORMAT_EN = '%Y-%m-%d'
    FORMAT_FR = '%d/%m/%Y'

    requests = MRSRequest.objects.all()
    if len(requests):
        print("--- found: {} requests".format(len(requests)))
    # request.data = an object with one birth_date
    for request in requests:
        if 'birth_date' in request.data:
            old = request.data['birth_date']
            try:
                # skip dates already in the right format
                # (like after a downgrade).
                datetime.strptime(old, FORMAT_FR)
            except ValueError:
                pass
            else:
                continue

            new= datetime.strptime(request.data['birth_date'],
                                   FORMAT_EN)\
                         .strftime(FORMAT_FR)
            request.data['birth_date'] = new
            print("\t request {}: {} -> {}".format(
                request.display_id,
                old,
                new,
            ))
            request.save()

    logentries = MRSRequestLogEntry.objects.all()
    # logentries.data.changed = dict with a list of birth_date
    for entry in logentries:
        if entry.data and \
           'changed' in entry.data.keys() and \
           'birth_date' in entry.data['changed'].keys():
            dates = entry.data['changed']['birth_date']
            for i, date in enumerate(dates):
                try:
                    datetime.strptime(date, FORMAT_FR)
                except ValueError:
                    pass
                else:
                    continue

                new = datetime.strptime(date, FORMAT_EN)\
                              .strftime(FORMAT_FR)
                print("\t {} -> {}".format(date, new))
                dates[i] = new

        entry.save()


def reverse_dates(apps, schema_editor):
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('mrsrequest', '0028_initial_data_distancevp'),
    ]

    operations = [
        migrations.RunPython(change_birth_date_format,
                             reverse_dates),
    ]
